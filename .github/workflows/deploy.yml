name: Deploy

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Lerna dependencies
      run: npx lerna bootstrap

    - name: Build frontend
      run: |
        cd packages/web-app
        npm run build

    - name: Deploy to Vercel (Optional)
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        if [ -n "$VERCEL_TOKEN" ]; then
          npx vercel --prod --token $VERCEL_TOKEN
        else
          echo "Vercel deployment skipped - no token provided"
        fi
      continue-on-error: true

  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Lerna dependencies
      run: npx lerna bootstrap

    - name: Build backend
      run: |
        cd packages/backend
        npm run build

    - name: Deploy to Railway/Heroku (Optional)
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        if [ -n "$RAILWAY_TOKEN" ]; then
          echo "Railway deployment would go here"
        elif [ -n "$HEROKU_API_KEY" ]; then
          echo "Heroku deployment would go here"
        else
          echo "Backend deployment skipped - no deployment service configured"
        fi
      continue-on-error: true
